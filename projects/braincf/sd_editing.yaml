name: BrainCF
target_size: &target_size !!python/tuple [128, 128]
train_batch_size: &tbatch_size 32
downstream_batch_size: &dbatch_size 16
checkpoint_path: &checkpoint_path './projects/braincf/weights/runs/'
#
# Experiment
#
experiment:
  name: sdedit
  task: sdedit
  #weights: ./projects/braincf/weights/runs/2024_03_08_19_20_58_561738/best_model.pt # base semantic synth model trained on less data
  #weights: ./projects/braincf/weights/runs/2024_03_10_23_49_49_559289/best_model.pt # base semantic synth model trained on more data
  #weights: ./projects/braincf/weights/runs/2024_03_23_13_58_55_159484/best_model.pt # base semantic synth model trained on all atlas healthy and unhealthy
  #weights: ./projects/braincf/weights/runs/2024_05_06_18_51_40_547296/best_model.pt # base semantic synth model trained on percentile stratified train/val data
  weights: ./projects/braincf/weights/runs/2024_05_12_12_51_09_914283/model_1500.pt # base semantic synth model trained on percentile stratified train/val/test data

device: gpu
configurator:
  module_name: core.Configurator
  class_name: DLConfigurator
  params:
#
# Model
#
model:
  module_name: model_zoo.ddpm
  class_name: DDPM
  params:
    spatial_dims: 2
    in_channels: 3
    out_channels: 1
    num_channels: 
      - 128
      - 256
      - 256
    attention_levels:
      - False
      - True
      - True
    num_res_blocks: 1
    num_head_channels: 256

    # Scheduling and noising scheme
    train_scheduler: "ddpm"
    inference_scheduler: "ddpm"
    inference_steps: 1000
    noise_level_recon: 999
    noise_type: "gaussian"
    method: "anoDDPM"
    prediction_type: "epsilon"

    # Thresholds on stroke data: 71, 570
    threshold_low: 1
    threshold_high: 10000

    image_path: './projects/braincf/images/'


#
# Trainer
#
trainer:
  module_name: projects.braincf.Trainer
  class_name: PTrainer
  params:
    input_size: *target_size
    checkpoint_path: *checkpoint_path
    batch_size: *tbatch_size
    nr_epochs: 1500
    val_interval: 200
    # Loss
    loss:
      module_name: optim.losses.ln_losses
      class_name: L2
      params:
    optimizer_params:
      lr: 1.0e-4
  # Data Loader
  data_loader:
    # Atlas-T1
    module_name: core.DataLoader
    class_name: DefaultDataLoader
    params:
      args:
        dilation_kernel: 15
        target_size: *target_size
        batch_size: *tbatch_size
        dataset_module:
          module_name: data.loaders.atlas_loader
          class_name: AtlasLoader
        data_dir:
          test:
            - './data/ATLAS/splits_healthy_54_sample/Atlas_healthy.csv'
        label_dir:
          test:
            - './data/ATLAS/splits_over_1_stratified_all_splits/atlas_test_mask_png.csv'
        mask_dir:
          test:
            - './data/ATLAS/splits_healthy_54_sample/Atlas_brain_mask_healthy.csv'

  reference_data_loader:
    module_name: core.DataLoader
    class_name: DefaultDataLoader
    params:
      args:
        dilation_kernel: 15
        target_size: *target_size
        batch_size: *tbatch_size
        dataset_module:
          module_name: data.loaders.atlas_loader
          class_name: AtlasLoader
        data_dir:
          test:
            - './data/ATLAS/splits_reference_test_unhealthy_54_samples/atlas_test_png.csv'

  reference_atlas_same_test_data_loader:
    module_name: core.DataLoader
    class_name: DefaultDataLoader
    params:
      args:
        dilation_kernel: 15
        target_size: *target_size
        batch_size: *tbatch_size
        dataset_module:
          module_name: data.loaders.atlas_loader
          class_name: AtlasLoader
        data_dir:
          test:
            - './data/ATLAS/splits_over_1_stratified_all_splits/atlas_test_png.csv'

# Downstream tasks
downstream_tasks:  
  detection:
   module_name: projects.autoddpm.DownstreamEvaluator
   class_name: PDownstreamEvaluator
   checkpoint_path: *checkpoint_path
   global_detection: True
   data_loader:
     module_name: core.DataLoader
     class_name: DefaultDataLoader
     params:
       args:
         target_size: *target_size
         batch_size: *dbatch_size
         dataset_module:
           module_name: data.loaders.ixi_loader
           class_name: IXILoader
     datasets:
       Atlas:
         data_dir:
           test:
             - './data/ATLAS/splits/atlas_train_png.csv'
         label_dir:
           test:
             - './data/ATLAS/splits/atlas_train_mask_png.csv' 

